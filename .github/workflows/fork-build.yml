name: Build Fork

on: workflow_dispatch

jobs:
  getInfo:
    name: Get build Info
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.getinfo.outputs.version }}
      baseVersion: ${{ steps.getinfo.outputs.baseVersion }}
      upstreamSha: ${{ steps.getinfo.outputs.upstreamSha }}
      forkBuilderSha: ${{ steps.getinfo.outputs.forkBuilderSha }}
    steps:
      - name: Checkout Firebot repo
        uses: actions/checkout@v4
        with:
          clean: false
          fetch-depth: 0
          repository: 'TheStaticMage/Firebot'
          ref: 'running-release'
          path: '.'

      - name: Checkout Fork Build Repo
        uses: actions/checkout@v4
        with:
          path: './fork-builder/'

      - name: Get Firebot info
        id: getinfo
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: node ./fork-builder/scripts/get-info.js $GITHUB_OUTPUT

  compile:
    name: 'Compile'
    needs: [getInfo]
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Firebot repo
        uses: actions/checkout@v4
        with:
          clean: false
          fetch-depth: 0
          repository: 'TheStaticMage/Firebot'
          ref: 'running-release'
          path: '.'

      - name: Checkout Fork Build Repo
        uses: actions/checkout@v4
        with:
          path: './fork-builder/'

      - name: Apply patches
        shell: bash
        run: |
          for patch in ./fork-builder/patches/*.patch; do
            git apply --ignore-space-change --ignore-whitespace "$patch"
          done

      - name: Set version
        run: node ./fork-builder/scripts/set-version.js ${{ needs.getInfo.outputs.version }}

      - name: Create secrets file
        env:
          TWITCH_APPLICATION_CLIENT_ID: ${{ secrets.TWITCH_APPLICATION_CLIENT_ID }}
          FONT_AWESOME_KIT_ID: ${{ secrets.FONT_AWESOME_KIT_ID }}
        run: node ./fork-builder/scripts/create-secrets.js

      - name: Install Python deps
        run: python -m pip install --upgrade packaging pip setuptools

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'

      - name: Install correct npm version
        run: npm install -g npm@10.9.2

      - name: Linux Build Prep
        if: runner.os == 'linux'
        run: sudo apt-get install libx11-dev libxtst-dev libpng-dev

      - name: Install Global Dependencies
        run: npm install --global --production --omit=dev grunt-cli node-gyp

      - name: Install Project Dependencies
        run: npm install

      - name: Build for Windows
        run: grunt fullpack cleanup:install create-windows-installer:win64
        if: runner.os == 'Windows'

      - name: Build for Linux
        run: grunt fullpack cleanup:install
        if: runner.os == 'Linux'

      - name: Create Linux subdirectory and tar
        if: runner.os == 'Linux'
        run: |
          mv ./dist/pack/Firebot-linux-x64 ./dist/pack/firebot-v${{ needs.getInfo.outputs.version }}
          mkdir -p ./dist/install/${{ runner.os }}
          tar -czf ./dist/install/${{ runner.os }}/firebot-v${{ needs.getInfo.outputs.version }}-linux-x64.tar.gz -C ./dist/pack firebot-v${{ needs.getInfo.outputs.version }}

      - name: Rename Windows installer
        if: runner.os == 'Windows'
        run: mv ./dist/install/${{ runner.os }}/firebot-*-setup.exe ./dist/install/${{ runner.os }}/firebot-v${{ needs.getInfo.outputs.version }}-setup.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: ./dist/install/${{ runner.os }}/

  draft:
    name: Draft Github Release
    needs: [getInfo, compile]
    runs-on: ubuntu-latest
    steps:
      - name: Download Compilation Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bundles/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ env.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          tag_name: v${{ needs.getInfo.outputs.version }}
          name: Firebot Mage Fork v${{ needs.getInfo.outputs.version }}
          body: |
            ### ${{ needs.getInfo.outputs.version }}

            This is an unsupported fork of [Firebot](https://firebot.app).

            **This fork is not affiliated with or endorsed by the Firebot project or its developers. No support is provided. Use at your own risk.**

            Firebot source code: <https://github.com/crowbartools/Firebot>

            Firebot base version: ${{ needs.getInfo.outputs.baseVersion }}

            Upstream commit: [${{ needs.getInfo.outputs.upstreamSha }}](https://github.com/TheStaticMage/Firebot/tree/${{ needs.getInfo.outputs.upstreamSha }})

            Fork Builder commit: [${{ needs.getInfo.outputs.forkBuilderSha }}](https://github.com/TheStaticMage/firebot-fork-builder/tree/${{ needs.getInfo.outputs.forkBuilderSha }})
          files: |
            ./bundles/Windows/firebot-v${{ needs.getInfo.outputs.version }}-setup.exe
            ./bundles/Linux/firebot-v${{ needs.getInfo.outputs.version }}-linux-x64.tar.gz
